---
services:
  striker:
    build:
      context: .
      dockerfile: .pipeline/blubber.yaml
      target: local-python
      args:
        LIVES_UID: ${LOCAL_UID:?run `make .env`}
        LIVES_GID: ${LOCAL_GID:?run `make .env`}
    image: striker/striker
    restart: always
    # Run container as local user to allow Linux mount writes
    user: "${LOCAL_UID:?run `make .env`}:${LOCAL_GID:?run `make .env`}"
    working_dir: /srv/app
    command: >
      /srv/dockerize/bin/dockerize
      -wait tcp://mariadb:3306
      -wait tcp://openldap:389
      -wait tcp://keystone:5000
      -timeout 300s
      poetry run python3 ./manage.py runserver --nostatic 0.0.0.0:8080
    environment:
      - DJANGO_SECRET_KEY
      - DJANGO_DEBUG
      - DJANGO_ALLOWED_HOSTS
      - LOGGING_HANDLERS
      - LOGGING_LEVEL
      - LOGGING_FILE_FILENAME
      - LOGSTASH_HOST
      - LOGSTASH_PORT
      - DB_ENGINE
      - DB_NAME
      - DB_USER
      - DB_PASSWORD
      - DB_HOST
      - DB_PORT
      - LDAP_SERVER_URI
      - LDAP_BIND_USER
      - LDAP_BIND_PASSWORD
      - LDAP_TLS
      - LDAP_USER_SEARCH_BASE
      - LDAP_USER_SEARCH_FILTER
      - LDAP_BASE_DN
      - STAFF_GROUP_DN
      - SUPERUSER_GROUP_DN
      - TOOLS_MAINTAINER_BASE_DN
      - TOOLS_TOOL_BASE_DN
      - TOOLS_TOOL_LABS_GROUP_NAME
      - TOOLS_DISABLED_POLICY_ENTRY
      - CACHE_BACKEND
      - CACHE_LOCATION
      - STATIC_ROOT
      - REQUIRE_HTTPS
      - SSL_CANONICAL_HOST
      - USE_XFF_HEADER
      - TRUSTED_PROXY_LIST
      - REMEMBER_ME_TTL
      - DEFAULT_GID
      - DEFAULT_SHELL
      - GITLAB_ACCESS_TOKEN
      - GITLAB_EXTERN_FORMAT
      - GITLAB_PROVIDER
      - GITLAB_REPO_NAMESPACE_ID
      - GITLAB_REPO_NAMESPACE_NAME
      - GITLAB_URL
      - MIN_GID
      - MAX_GID
      - MIN_UID
      - MAX_UID
      - OAUTH_CONSUMER_KEY
      - OAUTH_CONSUMER_SECRET
      - OAUTH_MWURL
      - PHABRICATOR_URL
      - PHABRICATOR_USER
      - PHABRICATOR_TOKEN
      - PHABRICATOR_REPO_ADMIN_GROUP
      - PHABRICATOR_PARENT_PROJECT
      - WIKITECH_URL
      - WIKITECH_USER
      - WIKITECH_CONSUMER_TOKEN
      - WIKITECH_CONSUMER_SECRET
      - WIKITECH_ACCESS_TOKEN
      - WIKITECH_ACCESS_SECRET
      - OPENSTACK_URL
      - OPENSTACK_USER
      - OPENSTACK_PASSWORD
      - OPENSTACK_PROJECT
      - OPENSTACK_USER_ROLE
      - OPENSTACK_ADMIN_ROLE
      - SITE_ENVIRONMENT_BANNER
      - FEATURE_ACCOUNT_CREATE
    volumes:
      - type: bind
        source: .
        target: /srv/app
        consistency: cached
    ports:
      - "${STRIKER_HTTP_PORT:-8080}:8080"
    networks:
      default:
        aliases:
          - striker.local.wmftest.net
    depends_on:
      - mariadb
      - openldap
      - phabricator
      - keystone
      - sulwiki
      - ldapwiki

  mariadb:
    build:
      context: contrib/docker/mariadb
    image: striker/mariadb
    restart: always
    volumes:
      - type: volume
        source: mariadb
        target: /var/lib/mysql
        consistency: consistent
    networks:
      default:
        aliases:
          - mariadb.local.wmftest.net

  openldap:
    build:
      context: contrib/docker/openldap
    image: striker/openldap
    restart: always
    command:
      - --loglevel
      - debug
    ports:
      - "1389:389"
    volumes:
      - type: volume
        source: openldap_ldap
        target: /var/lib/ldap
        consistency: consistent
      - type: volume
        source: openldap_slapd
        target: /etc/ldap/slapd.d
        consistency: consistent
    networks:
      default:
        aliases:
          - openldap.local.wmftest.net

  phabricator:
    build:
      context: contrib/docker/phabricator
    image: striker/phabricator
    restart: always
    ports:
      - "8081:8081"
    volumes:
      - type: volume
        source: phabricator
        target: /bitnami/phabricator
        consistency: consistent
    networks:
      default:
        aliases:
          - phabricator.local.wmftest.net
    depends_on:
      - mariadb

  keystone:
    build:
      context: contrib/docker/keystone
    image: striker/keystone
    restart: always
    ports:
      - "5000:5000"
    networks:
      default:
        aliases:
          - keystone.local.wmftest.net
    depends_on:
      - mariadb

  sulwiki:
    build:
      context: contrib/docker/mediawiki
    image: striker/mediawiki
    restart: always
    environment:
      APACHE_PORT: 8082
    ports:
      - "8082:8082"
    volumes:
      - type: bind
        source: ./contrib/docker/mediawiki/sulwiki/LocalSettings.php
        target: /var/www/html/LocalSettings.php
        consistency: cached
      - type: volume
        source: sulwiki_images
        target: /var/www/html/images
        consistency: consistent
    networks:
      default:
        aliases:
          - sulwiki.local.wmftest.net
    depends_on:
      - mariadb

  ldapwiki:
    build:
      context: contrib/docker/mediawiki
    image: striker/mediawiki
    restart: always
    environment:
      APACHE_PORT: 8083
    ports:
      - "8083:8083"
    volumes:
      - type: bind
        source: ./contrib/docker/mediawiki/ldapwiki/LocalSettings.php
        target: /var/www/html/LocalSettings.php
        consistency: cached
      - type: volume
        source: ldapwiki_images
        target: /var/www/html/images
        consistency: consistent
    networks:
      default:
        aliases:
          - ldapwiki.local.wmftest.net
    depends_on:
      - mariadb
      - sulwiki

  gitlab:
    image: "gitlab/gitlab-ce:16.6.1-ce.0"
    restart: always
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://gitlab.local.wmftest.net:8084'

        gitlab_rails['gitlab_shell_ssh_port'] = 2222

        gitlab_rails['ldap_enabled'] = true
        gitlab_rails['prevent_ldap_sign_in'] = false
        gitlab_rails['ldap_servers'] = {
          'main' => {
            'label' => 'LDAP',
            'host' =>  'openldap.local.wmftest.net',
            'port' => 389,
            'uid' => 'uid',
            'encryption' => 'plain',
            'bind_dn' => 'cn=proxyagent,dc=wmftest,dc=net',
            'password' => 'readonly',
            'active_directory' => false,
            'allow_username_or_email_login' => false,
            'base' => 'ou=People,dc=wmftest,dc=net',
            'attributes' => {
              'username' => 'uid',
              'email' => 'mail',
              'name' => 'cn'
            },
            'lowercase_usernames' => false,
          }
        }

        gitlab_rails['initial_root_password'] = 'docker-gitlab'

        logging['svlogd_num'] = 1
        logging['logrotate_rotate'] = 1
        registry['log_level'] = 'warn'
        gitlab_shell['log_level'] = 'WARN'
        gitaly['configuration'] = {
          logging_level: 'warn'
        }

        # Turn off some stuff that we don't need for Striker dev
        monitoring_role['enable'] = false
        prometheus['enable'] = false
        alertmanager['enable'] = false
        node_exporter['enable'] = false
        redis_exporter['enable'] = false
        postgres_exporter['enable'] = false
        pgbouncer_exporter['enable'] = false
        gitlab_exporter['enable'] = false
    ports:
      - "8084:8084"
      - "2222:22"
    volumes:
      - type: volume
        source: gitlab_config
        target: /etc/gitlab
        consistency: consistent
      - type: volume
        source: gitlab_logs
        target: /var/log/gitlab
        consistency: consistent
      - type: volume
        source: gitlab_data
        target: /var/opt/gitlab
        consistency: consistent
    networks:
      default:
        aliases:
          - gitlab.local.wmftest.net
    shm_size: 256m

volumes:
  mariadb:
    driver: local
  openldap_ldap:
    driver: local
  openldap_slapd:
    driver: local
  phabricator:
    driver: local
  sulwiki_images:
    driver: local
  ldapwiki_images:
    driver: local
  gitlab_config:
    driver: local
  gitlab_logs:
    driver: local
  gitlab_data:
    driver: local
